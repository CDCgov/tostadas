/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                    TEST PARAMS SETTINGS
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*/
params {

        help = false

        /*
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                PATHS FOR NECESSARY FILES
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        */
        if ( params.species == 'virus' ||params.species == 'mpxv' ) {
                // mpxv
                ref_fasta_path       = "${projectDir}/assets/ref/ref.MPXV.NC063383.v7.fasta"
                meta_path            = "${projectDir}/assets/sample_metadata/mpxv_test_metadata.xlsx"
                ref_gff_path         = "${projectDir}/assets/ref/ref.MPXV.NC063383.v7.gff"
                repeat_library       = "${projectDir}/assets/lib/mpxv_repeats_lib.fasta"
                vadr_models_dir      = "${projectDir}/vadr_files/mpxv-models"
                repeatmasker_liftoff = true

        }
        else if ( params.species == 'variola' ) {
                // varv
                ref_fasta_path       = "${projectDir}/assets/ref/varv_ref_v6.fasta"
                meta_path            = "${projectDir}/assets/sample_metadata/varv_test_metadata.xlsx"
                ref_gff_path         = "${projectDir}/assets/ref/varv_ref_v7.gff3"
        	repeat_library       = "${projectDir}/assets/lib/varv_repeats_lib.fasta"
                repeatmasker_liftoff = true
        }
        else if ( params.species == 'rsv' ) {
                // FOR VARV
                ref_fasta_path      = "${projectDir}/assets/ref/Human_orthopneumovirus_NC_001781.fasta"
                meta_path           = "${projectDir}/assets/sample_metadata/rsv_test_metadata.xlsx"
                vadr_models_dir     = "${projectDir}/vadr_files/rsv-models"
                vadr                = true
        }
        else if ( params.species == 'bacteria' ) {
                bakta               = true
                bakta_db_path       = "" // need to provide if running Bakta, or else use --download_bakta_db true
                meta_path           = "$projectDir/assets/sample_metadata/bacteria_test_metadata.xlsx"
                bakta_db_type       = "light" // can be light (3 GB) or full (30 GB)
        }
        
        /*
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                COMPUTE ENV 
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        */
        env_yml                         = "${projectDir}/environment.yml"
        enable_conda                    = false
        
        /*
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                GENERAL OUTPUT
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        */
        output_dir                     = 'test_output'
        overwrite_output               = true
        
        /*
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                VALIDATION   
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        */
        val_output_dir                 = 'validation_outputs'
        val_date_format_flag           = 's'
        val_keep_pi                    = false
        validate_custom_fields         = false
        custom_fields_file             = "${projectDir}/assets/custom_meta_fields/example_custom_fields.json"
        
        /*
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                LIFTOFF
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        */
        final_liftoff_output_dir       = 'liftoff_outputs' // only for liftoff
        lift_print_version_exit        = false // only for liftoff
        lift_print_help_exit           = false // only for liftoff
        lift_parallel_processes        = 8
        lift_coverage_threshold        = 0.5
        lift_child_feature_align_threshold = 0.5
        lift_unmapped_features_file_name = 'output.unmapped_features.txt'
        lift_copy_threshold            = 1.0
        lift_distance_scaling_factor   = 2.0
        lift_flank                     = 0.0
        lift_overlap                   = 0.1
        lift_mismatch                  = 2
        lift_gap_open                  = 2
        lift_gap_extend                = 1
        lift_minimap_path              = 'N/A' // if empty must be denoted as N/A or n/a or None
        lift_feature_database_name     = 'N/A' // if empty must be denoted as N/A or n/a or None
        lift_feature_types             = "${projectDir}/assets/feature_types.txt" // only for liftoff_cli
        /*
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                BAKTA
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        */
        bakta_output_dir               = "bakta_outputs"
        bakta_db_type                  = "light" // light or full
        download_bakta_db              = false
        bakta_db_path                  = ""
        bakta_min_contig_length        = 200 // due to compliant mode default, otherwise default is 1
        bakta_threads                  = 2
        bakta_gram                     = "?" 
        bakta_genus                    = "Genus"
        bakta_species                  = "species"
        bakta_strain                   = "strain"
        bakta_plasmid                  = "unnamed"
        bakta_locus                    = "contig"
        bakta_locus_tag                = "LOCUSTAG123" // set a meaningful locus tag here for compliant mode
        bakta_translation_table        = 11
        
        // optional bakta params, for now need to add these to modules/nf-core/bakta/bakta/main.nf
        bakta_complete                  = ""
        bakta_compliant                 = true
        bakta_keep_contig_headers       = ""
        bakta_replicons                 = ""
        bakta_proteins                  = ""
        bakta_skip_trna                 = ""
        bakta_skip_tmrna                = ""
        bakta_skip_rrna                 = ""
        bakta_skip_ncrna                = ""
        bakta_skip_ncrna_region         = ""
        bakta_skip_crispr               = ""
        bakta_skip_cds                  = ""
        bakta_skip_pseudo               = ""
        bakta_skip_sorf                 = ""
        bakta_skip_gap                  = ""
        bakta_skip_ori                  = ""
        bakta_skip_plot                 = true
 
        /*
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                SUBMISSION
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        */
        // general
        submission                     = true
        genbank                        = true
        sra                            = true
        gisaid                         = false
        biosample                      = true
        submission_mode                = 'ftp' // 'ftp' or 'sftp'
        submission_output_dir          = "submission_outputs"
        submission_prod_or_test        = "test" // "prod" if submitting
        submission_config              = "${projectDir}/bin/config_files/mpxv_config.yaml" 
        submission_wait_time           = 380
        send_submission_email          = false
        update_submission      = false
        fetch_reports_only     = false // only try to fetch reports
        // batch_name                     = "batch1"

        // for update_submission:
        processed_samples              = "${projectDir}/$output_dir/$submission_output_dir"
}
