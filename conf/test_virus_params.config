/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                    TEST PARAMS SETTINGS
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*/
params {

        help = false

        /*
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                PATHS FOR NECESSARY FILES
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        */
        if ( params.'variola' ) {
                // FOR VARV
                fasta_path      = "$projectDir/assets/sample_fastas/variola/"
                ref_fasta_path  = "$projectDir/assets/ref/varv_ref_v6.fasta"
                meta_path       = "$projectDir/assets/sample_metadata/VARV_metadata_Sample_Run_1.xlsx"
                ref_gff_path    = "$projectDir/assets/ref/varv_ref_v7.gff3"
                env_yml         = "$projectDir/environment.yml"
        }
        else  {
                // FOR MPOX
                fasta_path      = "$projectDir/assets/sample_fastas/mpox/"
                ref_fasta_path  = "$projectDir/assets/ref/ref.MPXV.NC063383.v7.fasta"
                meta_path       = "$projectDir/assets/custom_meta_fields/custom_fields_MPXV_metadata_Sample_Run_1.xlsx"
                ref_gff_path    = "$projectDir/assets/ref/ref.MPXV.NC063383.v7.gff"
        }
        env_yml = "$projectDir/environment.yml"

        /*
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                COMPUTE ENV 
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        */
        scicomp = false
        docker_container = 'staphb/tostadas:latest'
        docker_container_vadr = 'staphb/vadr:latest'

        /*
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                ANNOTATION SUBWORKFLOW 
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        */
        run_annotation = true
        run_vadr = false
        run_repeatmasker_liftoff = true
        run_liftoff = false
        
        /*
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                CLEANUP SUBWORKFLOW
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        */
        cleanup = true
        clear_nextflow_log = false
        clear_work_dir = false
        clear_conda_env = false
        clear_nf_results = false

        /*
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                GENERAL OUTPUT
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        */
        output_dir = 'nf_test_results'
        overwrite_output = true

        /*
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                VALIDATION   
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        */
        val_output_dir = 'validation_outputs'
        val_date_format_flag = 's'
        val_keep_pi = false
        validate_custom_fields = false
        custom_fields_file = "$projectDir/assets/custom_meta_fields/example_custom_fields.json"

        /*
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                LIFTOFF
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        */
        final_liftoff_output_dir = 'liftoff_outputs' // only for liftoff
        lift_print_version_exit = false // only for liftoff
        lift_print_help_exit = false // only for liftoff
        lift_parallel_processes = 8
        lift_delete_temp_files = 'true' // only for liftoff
        lift_coverage_threshold = 0.5
        lift_child_feature_align_threshold = 0.5
        lift_unmapped_features_file_name = 'output.unmapped_features.txt'
        lift_copy_threshold = 1.0
        lift_distance_scaling_factor = 2.0
        lift_flank = 0.0
        lift_overlap = 0.1
        lift_mismatch = 2
        lift_gap_open = 2
        lift_gap_extend = 1
        lift_infer_transcripts = 'false'
        lift_infer_genes = false
        lift_copies = 'false'
        lift_minimap_path = 'N/A' // if empty must be denoted as N/A or n/a or None
        lift_feature_database_name = 'N/A' // if empty must be denoted as N/A or n/a or None
        lift_feature_types = "$projectDir/assets/feature_types.txt" // only for liftoff_cli

        /*
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                VADR
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        */
        vadr_output_dir = 'vadr_outputs'
        vadr_models_dir = "$projectDir/vadr_files/mpxv-models"

        /*
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                REPEATMASKER
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        */
        params.repeat_lib = '' //optional if you want to add your own custom library, if you choose to use one of ours stat varv to use the 'varv' custom lib or 'mpox' to use the mpoc custom lib

        /*
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                SUBMISSION
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        */
        // general
        run_submission = true
        submission_output_dir = "submission_outputs"
        submission_prod_or_test = 'test'
        submission_wait_time = 'calc'
        send_submission_email = false
        submission_config = "$projectDir/bin/config_files/mpxv_config_kk.yaml" 
        req_col_config = "$projectDir/bin/default_config_files/required_columns.yaml"
        submission_database = "submit"  // must be either: 'submit' (follows existing config), 'genbank', 'sra', 'gisaid', 'biosample', 'joint_sra_biosample', or 'all'
        batch_name = "batch1"

        // for update_submission entrypoint:
        processed_samples = "$projectDir/$output_dir/$submission_output_dir"
        
        /*
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                ENTRYPOINTS (SUBMISSION + ONLY_INITIAL_SUBMISSION) / USER PROVIDED ANNOTATIONS DIRECT PATHS 
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        */
        if ( params.variola ) {
                final_annotated_files_path = "$projectDir/assets/gffs/variola_split_gffs"
                final_split_fastas_path = "$projectDir/assets/sample_fastas/variola"
                final_split_metas_path = "$projectDir/$output_dir/$val_output_dir/VARV_metadata_Sample_Run_1/tsv_per_sample"
        } else {
                final_annotated_files_path = "$projectDir/assets/gffs/mpox_split_gffs"
                final_split_fastas_path = "$projectDir/assets/sample_fastas/mpox"
                final_split_metas_path = "$projectDir/$output_dir/$val_output_dir/custom_fields_MPXV_metadata_Sample_Run_1/tsv_per_sample"
        }
}