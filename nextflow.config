/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                   GENERAL INFORMATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*/
// To Do, decide what goes where between here and standard params

// Global default params, used in configs
params {
    
    // Schema
    schema                       = 'nextflow_schema.json'

    // Workflow options: biosample_and_sra, genbank, fetch_accessions, full_submission, update_submission
    workflow                     =  "biosample_and_sra"

    // Input paths
    ref_fasta_path               = "${projectDir}/assets/ref/ref.MPXV.NC063383.v7.fasta"
    meta_path                    = "${projectDir}/assets/metadata_template.xlsx"
    ref_gff_path                 = "${projectDir}/assets/ref/ref.MPXV.NC063383.v7.gff"

    // Validation subworkflow
    date_format_flag             = 's'  // s = default (YYYY-MM), v = verbose(YYYY-MM-DD), o = original (leaves format unchanged)
    remove_demographic_info      = false // if true, values in host_sex, host_age, race, ethnicity are set to 'Not Provided'
    validate_custom_fields       = false
    custom_fields_file           = "${projectDir}/assets/custom_meta_fields/example_custom_fields.json"

    // Viral annotation params
    annotation                   = true 
    repeatmasker_liftoff         = true 
    vadr                         = false
    bakta                        = false

    // Organism options
    // Options = mpxv, variola, rsv, virus (defaults to mpxv), bacteria, eukaryote
    biosample_pkg                 = null // wastewater, onehealth
    organism_type                 = null // virus, bacteria, eukaryote                                                    
    virus_subtype                 = null // mpxv, rsv, variola

    // RepeatMasker organism specific repeat library settings
    repeat_library = params.virus_subtype == "variola" ? 
        "${projectDir}/assets/lib/varv_repeats_lib.fasta" : 
        "${projectDir}/assets/lib/mpxv_repeats_lib.fasta" 

    // Bacterial annotation params
    bakta = params.organism_type == 'bacteria' ? true : false
    repeatmasker_liftoff = params.organism_type == 'bacteria' ? false : true  
    vadr = params.repeatmasker_liftoff == true ? false : true 

    // Submission params 
    submission                   = true
    biosample                    = true
    sra                          = false
    batch_size                   = 5 //number of samples to submit at once
    submission_mode              = 'ftp' // 'ftp' or 'sftp'
    submission_outdir            = "submission_outputs"
    final_submission_outdir      = "final_submission_outputs"
    prod_submission              = false // true if submitting to Production
    submission_config            = "${projectDir}/conf/submission_config.yaml"
    submission_wait_time         = 380 // time in seconds
    send_submission_email        = false 
    original_submission_outdir    = "" // path to your original submissions, should end in 'submission_outputs' and contain batch_<n> directories if you used this pipeline to submit
    biosample_fields_key         = "${projectDir}/assets/biosample_fields_key.yaml"
    updated_meta_path            = null // pipeline will find this in final_submission_output_dir if it exists
    dry_run                      = false // prints ftp paths files will be uploaded to

    // General params
    help                         = false
    publish_dir_mode             = 'copy'
    save_reference               = false
    outdir                       = "results"
    bakta_outdir                 = "bakta_outputs"
    vadr_outdir                  = "vadr_clean_outputs"
    final_liftoff_outdir         = "repeatmasker_liftoff_outputs"
    validation_outdir            = "validation_outputs"
    vadr_models_dir              = "${projectDir}/vadr_files/rsv-models"

    // Environment params
    env_yml                      = "${projectDir}/environment.yml"
    repeatmasker_env_yml         = "${projectDir}/environments/repeatmasker_env.yml"
    vadr_env_yml                 = "${projectDir}/environments/vadr_env.yml"

    // Cleanup subworkflow
    overwrite_output             = true

    // Required bakta params
    bakta_db_type                = "light" // light or full
    download_bakta_db            = ""
    bakta_db_path                = ""
    bakta_min_contig_length      = 5
    bakta_threads                = 2
    bakta_gram                   = "?"
    bakta_genus                  = 'N/A'
    bakta_species                = 'N/A'
    bakta_strain                 = 'N/A'
    bakta_plasmid                = 'unnamed' 
    bakta_locus                  = 'contig'
    bakta_locus_tag              = ''
    bakta_translation_table      = 11

    // Optional bakta params
    bakta_complete               = ""
    bakta_keep_contig_headers    = ""
    bakta_replicons              = ""
    bakta_proteins               = ""
    bakta_prodigal_tf            = ""
    bakta_skip_trna              = ""
    bakta_skip_tmrna             = ""
    bakta_skip_rrna              = ""
    bakta_skip_ncrna             = ""
    bakta_skip_ncrna_region      = ""
    bakta_skip_crispr            = ""
    bakta_skip_cds               = ""
    bakta_skip_pseudo            = ""
    bakta_skip_sorf              = ""
    bakta_skip_gap               = ""
    bakta_skip_ori               = ""
    bakta_compliant              = true
    bakta_skip_plot              = true
    
    // Liftoff annotation
    lift_print_version_exit            = false 
    lift_print_help_exit               = false 
    lift_parallel_processes            = 8
    lift_coverage_threshold            = 0.5
    lift_child_feature_align_threshold = 0.5
    lift_unmapped_features_file_name   = 'output.unmapped_features.txt'
    lift_copy_threshold                = 1.0
    lift_distance_scaling_factor       = 2.0
    lift_flank                         = 0.0
    lift_overlap                       = 0.1
    lift_mismatch                      = 2
    lift_gap_open                      = 2
    lift_gap_extend                    = 1
    lift_minimap_path                  = 'N/A' 
    lift_feature_database_name         = 'N/A' 
    lift_feature_types                 = "${projectDir}/assets/feature_types.txt"

    // Vadr annotation
    vadr_models_dir = "${projectDir}/vadr_files/${params.virus_subtype == 'mpox' ? 'mpxv' : params.virus_subtype}-models" 
}

includeConfig 'conf/modules.config'

docker.registry      = 'quay.io'

/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                             PROFILES 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*/


// To Do: align these profiles with nf-core style, also align rest of this config
profiles {    
    test       { includeConfig "conf/test.config" }
    // Programs
    nwss       { includeConfig 'conf/nwss.config' }
    pulsenet   { includeConfig 'conf/pulsenet.config' }
    // Organism types
    mpox       { includeConfig 'conf/mpox.config' }
    rsv        { includeConfig 'conf/rsv.config' }
    bacteria   { includeConfig 'conf/bacteria.config' }
    virus   { includeConfig 'conf/virus.config' }

    aws {
        accessKey = '<Your access key>'
        secretKey = '<Your secret key>'
        client {
            endpoint = '<Your storage endpoint URL>'
            s3PathStyleAccess = true
        }
    }
    azure {
        storage {
            accountName = "<YOUR BLOB ACCOUNT NAME>"
            accountKey = "<YOUR BLOB ACCOUNT KEY>"
        }
    }
    conda {
        conda.enabled          = true
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        conda.useMamba         = true
        
    }
    docker {
        conda.enabled          = false
        docker.enabled         = true
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    singularity {
        conda.enabled          = false
        singularity.enabled    = true
        singularity.autoMounts = true
        docker.enabled         = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
}

// Nextflow plugins
plugins {
    id 'nf-schema@2.3.0' // Validation of pipeline parameters and creation of an input channel from a sample sheet
}

/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                               NEXTFLOW TOWER SETTINGS
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*/

//tower {
//    enabled = false
//    accessToken = '<your token>'
//    workspaceId = '<your workspace id>'
//}

manifest {
    name = 'TOSTADAS'
    author = 'Rowell, OConnell, Sivakumar, Gupta'
    description = 'Nextflow workflow for annotation of viral and bacterial sequences and submission to NCBI databases'
    mainScript = 'main.nf'
    nextflowVersion = '>=20.07.1'
    version = 'latest'
}