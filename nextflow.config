/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                   GENERAL INFORMATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*/

manifest {
    name = 'mpxv_nextflow'
    author = 'AG'
    description = 'nextflow wrapper for running the MPXV pipeline'
    mainScript = 'main.nf'
    nextflowVersion = '>=20.07.1'
    version = 'latest'
}

// Global default params, used in configs
params {
    help = false

    fasta_path = ""
    ref_fasta_path = ""
    meta_path = ""
    ref_gff_path = ""

    liftoff_script = ""
    validation_script = ""
    submission_script = ""

    env_yml = ""

    scicomp = false
    run_submission = true
    cleanup = true

    clear_nextflow_log = null
    clear_work_dir = null
    clear_conda_env = null
    clear_nf_results = null

    output_dir = ""
    overwrite_output = null

    val_output_dir = ""
    val_date_format_flag = 's'
    val_keep_pi = false

    final_liftoff_output_dir = ""
    lift_print_version_exit = null
    lift_print_help_exit = null
    lift_parallel_processes = 8
    lift_delete_temp_files = null
    lift_coverage_threshold = null
    lift_child_feature_align_threshold = null
    lift_unmapped_features_file_name = 'output.unmapped_features.txt'
    lift_copy_threshold = null
    lift_distance_scaling_factor = null
    lift_flank = null
    lift_overlap = null
    lift_mismatch = null
    lift_gap_open = null
    lift_gap_extend = null
    lift_infer_transcripts = null
    lift_copies = null
    lift_minimap_path = 'N/A' 
    lift_feature_database_name = 'N/A'

    submission_output_dir = ""
    submission_wait_time = ""
    submission_only_meta = ""
    submission_only_gff = ""
    submission_only_fasta = ""
    submission_config = ""
    batch_name = "" 
}

/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                             PROFILES 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*/

profiles {

    // parameter sets 
    standard {
        try {
            includeConfig "$projectDir/conf/standard_params.config"
        } catch (Exception e) {
            System.err.println("WARNING: Could not load standard_params.config from ${projectDir}/nf_params/conf/")
        }
    }
    test { 
        try {
            includeConfig "$projectDir/conf/test_params.config" 
        } catch (Exception e) {
            System.err.println("WARNING: Could not load test_params.config from ${projectDir}/nf_params/conf/")
        }
    }

    // run docker + specify settings 
    docker {
        params.run_docker = true
        params.run_conda = false
        params.run_singularity = false

        conda.enabled = false
        docker.enabled = true
        singularity.enabled = false

        docker.runOptions = '-u \$(id -u):\$(id -g)'
        
        process {
            withLabel: main {
                container = 'general'
            }
        }
    }

    // run conda + specify settings 
    conda {
        params.run_conda = true
        params.run_docker = false
        params.run_singularity = false

        conda.enabled = true
        docker.enabled = false
        singularity.enabled = false

        conda.useMamba = true
    }

    // run singularity  + specify settings 
    singularity {
        params.run_singularity = true
        params.run_docker = false 
        params.run_conda = false

        conda.enabled = false
        docker.enabled = false
        singularity.enabled = true

        singularity.autoMounts = false
        singularity.cacheDir = "$PWD"
        if ( params.scicomp == true ) {
            singularity.runOptions = "--bind $projectDir --bind /dev/shm"
        } else { 
            singularity.runOptions = "--bind $projectDir --bind /run/shm"  
        }

        process {
            withLabel: main {
                container = "$projectDir/app/singularity/containers/singularity_docker.sif"
            }
        }
    }
}

/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                               NEXTFLOW TOWER SETTINGS
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*/

tower {
    enabled = false
    accessToken = '<your token>'
    workspaceId = '<your workspace id>'
}

