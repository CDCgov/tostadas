nextflow_process {

    name "Test Process LIFTOFF_CLI"
    script "modules/local/liftoff_cli_annotation/main.nf"
    process "LIFTOFF_CLI"

    test("Should run without failures") {

        when {
            params {
                // parameter values
                output_dir = "${outputDir}"
                overwrite_output = true
                lift_unmapped_features_file_name = "output.unmapped_features.txt"
                lift_coverage_threshold = 0.5
                lift_child_feature_align_threshold = 0.5
                lift_distance_scaling_factor = 2.0
                lift_flank = 0
                lift_parallel_processes = 8
                lift_feature_types = "${projectDir}/assets/feature_types.txt"
                lift_copy_threshold = 1.0
                lift_overlap = 0.1
                lift_mismatch = 2
                lift_gap_open = 2
                lift_gap_extend = 1
            }
            process {
                """
                input[0] = ["NY0006", file("${projectDir}/assets/sample_metadata/mpxv_test_metadata.xlsx"), 
                                         file("${projectDir}/assets/sample_fastas/mpox/NY0006.fasta"), 
                                         file("${projectDir}/assets/sample_fastqs/mpox/2022-028-7666_S3_L001_R1_001.fastq.gz"), 
                                         file("${projectDir}/assets/sample_fastqs/mpox/2022-028-7666_S3_L001_R2_001.fastq.gz")]
                input[1] = file("${projectDir}/assets/ref/ref.MPXV.NC063383.v7.fasta")
                input[2] = file("${projectDir}/assets/ref/ref.MPXV.NC063383.v7.gff")
                """
            }
        }

        then {
            assert process.success
            assert snapshot(process.out).match()
        }
    }
}

