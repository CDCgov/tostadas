{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://example.com/nextflow_schema.json",
  "title": "Nextflow Pipeline Parameters",
  "description": "Nextflow_Schema.json",
  "type": "object",
  "$defs": {
    "Required Parameters": {
      "properties": {
        "species": {
          "type": "string",
          "description": "Species name for the analysis."
        },
        "meta_path": {
          "type": "string",
          "format": "file-path",
          "description": "Meta-data file path for samples",
          "default": "/tostadas/assets/metadata_template.xlsx",
          "pattern": "^\\S+\\.(xlsx|xls|xlsm|xlsb|csv)$"
        },
        "ref_fasta_path": {
          "type": "string",
          "format": "file-path",
          "description": "Reference Sequence file path",
          "default": "${projectDir}/tostadas/assets/ref/ref.MPXV.NC063383.v7.fasta",
          "pattern": "^\\S+\\.(fasta|fa|fna|ffn|faa|frn|fasta\\.gz|fa\\.gz|fna\\.gz|ffn\\.gz|faa\\.gz|frn\\.gz|fasta\\.zip|fa\\.zip|fna\\.zip|ffn\\.zip|faa\\.zip|frn\\.zip|fasta\\.bz2|fa\\.bz2|fna\\.bz2|ffn\\.bz2|faa\\.bz2|frn\\.bz2|fasta\\.tar\\.bz2|fa\\.tar\\.bz2|fna\\.tar\\.bz2|ffn\\.tar\\.bz2|faa\\.tar\\.bz2|frn\\.tar\\.bz2|fasta\\.tar|fa\\.tar|fna\\.tar|ffn\\.tar|faa\\.tar|frn\\.tar|fasta\\.tar\\.gz|fa\\.tar\\.gz|fna\\.tar\\.gz|ffn\\.tar\\.gz|faa\\.tar\\.gz|frn\\.tar\\.gz)$"
        },
        "ref_gff_path": {
          "type": "string",
          "format": "file-path",
          "description": "Reference GFF3 file to use for the liftoff_submission branch of the pipeline",
          "default": "${projectDir}/tostadas/assets/ref/ref.MPXV.NC063383.v7.gff",
          "pattern": "^\\S+\\.(gff|gff3)$"
        },
        "output_dir": {
          "type": "string",
          "format": "directory-path",
          "description": "File path to submit outputs from pipeline",
          "default": "results"
        }
      }
    },
    "Pipeline Configuration Modes": {
      "properties": {
        "validate_params": {
          "type": "boolean",
          "description": "Flag to enable or disable parameter validation.",
          "default": true
        },
        "annotation": {
          "description": "Toggle for running annotation",
          "type": "boolean",
          "default": true
        },
        "submission": {
          "type": "boolean",
          "description": "Toggle for running submission",
          "default": true
        },
        "fetch_reports_only": {
          "type": "boolean",
          "description": "Toggle for only fetching submission reports.",
          "default": false
        },
        "update_submission": {
          "type": "boolean",
          "description": "Flag to enable or disable updating existing submissions.",
          "default": false
        }
      }
    },
    "Annotation Parameters": {
      "properties": {
        "vadr": {
          "type": "boolean",
          "description": "Flag to enable or disable VADR (Viral Annotation DefineR) step.",
          "default": "${projectDir}/environments/vadr_env.yml"
        },
        "repeatmasker_liftoff": {
          "type": "boolean",
          "description": "Flag to enable or disable RepeatMasker and Liftoff steps.",
          "default": "true"
        },
        "final_liftoff_output_dir": {
          "type": "string",
          "format": "directory-path",
          "description": "File path to liftoff specific sub-workflow outputs",
          "default": "liftoff_outputs",
          "hidden": true
        },
        "lift_print_version_exit": {
          "type": "boolean",
          "description": "Print version and exit the program",
          "hidden": true
        },
        "lift_print_help_exit": {
          "type": "boolean",
          "description": "Print help and exit the program",
          "hidden": true
        },
        "lift_parallel_processes": {
          "type": "integer",
          "description": "# of parallel processes to use for liftoff",
          "default": 8,
          "hidden": true
        },
        "lift_child_feature_align_threshold": {
          "type": "number",
          "description": "Map only if its child features align with sequence identity > this value",
          "default": 0.5,
          "hidden": true
        },
        "lift_unmapped_features_file_name": {
          "type": "string",
          "description": "Name of unmapped features file name",
          "default": "output.unmapped_features.txt",
          "pattern": "^\\S+\\.txt$",
          "hidden": true
        },
        "lift_copy_threshold": {
          "type": "number",
          "description": "Minimum sequence identity in exons/CDS for which a gene is considered a copy; must be greater than -s; default is 1.0",
          "default": 1.0,
          "hidden": true
        },
        "lift_distance_scaling_factor": {
          "type": "number",
          "description": "Distance scaling factor; by default D =2.0",
          "default": 2.0,
          "hidden": true
        },
        "lift_flank": {
          "type": "number",
          "description": "Amount of flanking sequence to align as a fraction of gene length",
          "default": 0.0,
          "hidden": true
        },
        "lift_overlap": {
          "type": "number",
          "description": "Maximum fraction of overlap allowed by 2 features",
          "default": 0.1,
          "hidden": true
        },
        "lift_mismatch": {
          "type": "integer",
          "description": "Mismatch penalty in exons when finding best mapping; by default M=2",
          "default": 2,
          "hidden": true
        },
        "lift_gap_open": {
          "type": "integer",
          "description": "Gap open penalty in exons when finding best mapping; by default GO=2",
          "default": 2,
          "hidden": true
        },
        "lift_gap_extend": {
          "type": "integer",
          "description": "Gap extend penalty in exons when finding best mapping; by default GE=1",
          "default": 1,
          "hidden": true
        },
        "lift_minimap_path": {
          "type": "string",
          "description": "Path to minimap if you did not use conda or pip",
          "default": "N/A",
          "hidden": true
        },
        "lift_feature_database_name": {
          "type": "string",
          "description": "Name of the feature database, if none, then will use ref gff path to construct one",
          "default": "N/A",
          "hidden": true
        },
        "lift_coverage_threshold": {
          "type": "number",
          "default": 0.5,
          "hidden": true
        },
        "lift_feature_types": {
          "type": "string",
          "default": "${projectDir}/assets/feature_types.txt",
          "pattern": "^\\S+\\.txt$",
          "hidden": true
        },
        "repeat_library": {
          "type": "string",
          "description": "Path to the repeat library file used by RepeatMasker.",
          "default": "${projectDir}/assets/lib/MPOX_repeats_lib.fasta",
          "pattern": "^\\S+\\.(fasta|fa|fna|ffn|faa|frn|fasta\\.gz|fa\\.gz|fna\\.gz|ffn\\.gz|faa\\.gz|frn\\.gz|fasta\\.zip|fa\\.zip|fna\\.zip|ffn\\.zip|faa\\.zip|frn\\.zip|fasta\\.bz2|fa\\.bz2|fna\\.bz2|ffn\\.bz2|faa\\.bz2|frn\\.bz2|fasta\\.tar\\.bz2|fa\\.tar\\.bz2|fna\\.tar\\.bz2|ffn\\.tar\\.bz2|faa\\.tar\\.bz2|frn\\.tar\\.bz2|fasta\\.tar|fa\\.tar|fna\\.tar|ffn\\.tar|faa\\.tar|frn\\.tar|fasta\\.tar\\.gz|fa\\.tar\\.gz|fna\\.tar\\.gz|ffn\\.tar\\.gz|faa\\.tar\\.gz|frn\\.tar\\.gz)$",
          "hidden": true
        },
        "bakta": {
          "type": "boolean",
          "description": "Toggle for running Bakta annotation"
        },
        "bakta_db_type": {
          "type": "string",
          "description": "Bakta database type (light or full)",
          "default": "light"
        },
        "bakta_output_dir": {
          "type": "string",
          "format": "directory-path",
          "description": "File path to bakta specific sub-workflow outputs",
          "default": "bakta_outputs",
          "hidden": true
        },
        "bakta_min_contig_length": {
          "type": "integer",
          "description": "Minimum contig size",
          "default": 5,
          "hidden": true
        },
        "bakta_threads": {
          "type": "integer",
          "description": "Number of threads to use while running annotation",
          "default": 2,
          "hidden": true
        },
        "bakta_genus": {
          "type": "string",
          "description": "Organism genus name",
          "default": "N/A",
          "hidden": true
        },
        "bakta_species": {
          "type": "string",
          "description": "Organism species name",
          "default": "N/A",
          "hidden": true
        },
        "bakta_strain": {
          "type": "string",
          "description": "Organism strain name",
          "default": "N/A",
          "hidden": true
        },
        "bakta_plasmid": {
          "type": "string",
          "description": "Name of plasmid",
          "default": "unnamed",
          "hidden": true
        },
        "bakta_locus": {
          "type": "string",
          "description": "Locus prefix",
          "default": "contig",
          "hidden": true
        },
        "bakta_locus_tag": {
          "type": "string",
          "description": "Locus tag prefix",
          "default": "autogenerated",
          "hidden": true
        },
        "bakta_translation_table": {
          "type": "integer",
          "description": "Translation table",
          "default": 11,
          "hidden": true
        },
        "bakta_gram": {
          "type": "string",
          "description": "Gram type for signal peptide predictions",
          "default": "?",
          "hidden": true
        },
        "bakta_complete": {
          "type": "string",
          "hidden": true
        },
        "bakta_compliant": {
          "type": "boolean",
          "default": true,
          "hidden": true
        },
        "bakta_keep_contig_headers": {
          "type": "string",
          "hidden": true
        },
        "bakta_replicons": {
          "type": "string",
          "hidden": true
        },
        "bakta_proteins": {
          "type": "string",
          "hidden": true
        },
        "bakta_prodigal_tf": {
          "type": "string",
          "hidden": true
        },
        "bakta_skip_trna": {
          "type": "string",
          "hidden": true
        },
        "bakta_skip_tmrna": {
          "type": "string",
          "hidden": true
        },
        "bakta_skip_rrna": {
          "type": "string",
          "hidden": true
        },
        "bakta_skip_ncrna": {
          "type": "string",
          "hidden": true
        },
        "bakta_skip_ncrna_region": {
          "type": "string",
          "hidden": true
        },
        "bakta_skip_crispr": {
          "type": "string",
          "hidden": true
        },
        "bakta_skip_cds": {
          "type": "string",
          "hidden": true
        },
        "bakta_skip_pseudo": {
          "type": "string",
          "hidden": true
        },
        "bakta_skip_sorf": {
          "type": "string",
          "hidden": true
        },
        "bakta_skip_gap": {
          "type": "string",
          "hidden": true
        },
        "bakta_skip_ori": {
          "type": "string",
          "hidden": true
        },
        "bakta_skip_plot": {
          "type": "boolean",
          "default": true,
          "hidden": true
        },
        "bakta_db_path": {
          "type": "string",
          "description": "Path to Bakta database if user is supplying database"
        },
        "download_bakta_db": {
          "type": "boolean",
          "description": "Option to download Bakta database"
        }
      }
    },
    "Submission Parameters": {
      "properties": {
        "submission_output_dir": {
          "type": "string",
          "format": "directory-path",
          "description": "Either name or relative/absolute path for the outputs from submission",
          "default": "submission_outputs"
        },
        "final_submission_output_dir": {
          "type": "string",
          "format": "directory-path",
          "description": "Either name or relative/absolute path for the final outputs from submission report fetching",
          "default": "final_submission_outputs"
        },
        "submission_prod_or_test": {
          "type": "string",
          "description": "Whether to submit samples for test or actual production",
          "default": "test"
        },
        "submission_config": {
          "type": "string",
          "description": "Configuration file for submission to public repos",
          "default": "${projectDir}/bin/config_files/<your-ncbi-config>.yaml",
          "pattern": "^\\S+\\.(yaml|yml)$"
        },
        "submission_wait_time": {
          "type": "integer",
          "description": "Calculated based on sample number (3 * 60 secs * sample_num)",
          "default": 380
        },
        "send_submission_email": {
          "type": "boolean",
          "description": "Toggle email notification on/off",
          "default": false
        },
        "submission_mode": {
          "type": "string",
          "description": "Mode of submission.",
          "default": "ftp"
        }
      }
    },
    "Submission Database Options": {
      "properties": {
        "genbank": {
          "type": "boolean",
          "description": "Submit to GenBank",
          "default": true
        },
        "sra": {
          "type": "boolean",
          "description": "Submit to SRA",
          "default": true
        },
        "biosample": {
          "type": "boolean",
          "description": "Flag to enable or disable submission to BioSample.",
          "default": true
        }
      }
    },
    "General Pipeline Configuration": {
      "properties": {
        "schema": {
          "type": "string",
          "description": "The schema file for validating the pipeline parameters.",
          "default": "nextflow_schema.json",
          "hidden": true
        },
        "env_yml": {
          "type": "string",
          "description": "Path to the environment YAML file for setting up the conda environment.",
          "default": "${projectDir}/environment.yml",
          "hidden": true
        },
        "repeatmasker_env_yml": {
          "type": "string",
          "description": "Path to the environment YAML file for RepeatMasker.",
          "default": "${projectDir}/environments/repeatmasker_env.yml",
          "hidden": true
        },
        "vadr_env_yml": {
          "type": "string",
          "description": "Path to the environment YAML file for VADR.",
          "default": "${projectDir}/environments/vadr_env.yml",
          "hidden": true
        },
        "submission_output_dir": {
          "type": "string",
          "format": "directory-path",
          "description": "Either name or relative/absolute path for the outputs from submission",
          "default": "submission_outputs",
          "hidden": true
        },
        "vadr_output_dir": {
          "type": "string",
          "format": "directory-path",
          "description": "File path to vadr specific sub-workflow outputs",
          "default": "vadr_outputs",
          "hidden": true
        },
        "vadr_models_dir": {
          "type": "string",
          "format": "directory-path",
          "description": "File path to models for MPXV used by VADR annotation",
          "default": "",
          "hidden": true
        },
        "val_output_dir": {
          "type": "string",
          "format": "directory-path",
          "description": "File path for outputs specific to validate sub-workflow",
          "default": "validation_outputs",
          "hidden": true
        },
        "cleanup": {
          "type": "boolean",
          "default": true,
          "hidden": true
        },
        "clear_nextflow_log": {
          "type": "boolean",
          "hidden": true
        },
        "clear_work_dir": {
          "type": "boolean",
          "hidden": true
        },
        "clear_conda_env": {
          "type": "boolean",
          "hidden": true
        },
        "clear_nf_results": {
          "type": "boolean",
          "hidden": true
        },
        "date_format_flag": {
          "type": "string",
          "description": "Flag to change date output",
          "default": "s",
          "hidden": false
        },
        "remove_demographic_info": {
          "type": "boolean",
          "description": "Flag that, if false, will remove any potentially identifying demographic data",
          "default": true,
          "hidden": false
        },
        "overwrite_output": {
          "type": "boolean",
          "description": "Toggle to overwriting output files in directory",
          "default": true,
          "hidden": true
        },
        "publish_dir_mode": {
          "type": "string",
          "description": "Mode for publishing directory, e.g., 'copy' or 'move'.",
          "default": "copy",
          "hidden": false
        },
        "processed_samples": {
          "type": "string",
          "description": "Directory where processed samples are stored.",
          "default": "${projectDir}/results/submission_outputs",
          "hidden": false
        },
        "validate_custom_fields": {
          "type": "boolean",
          "description": "Toggle checks/transformations for custom metadata fields on/off",
          "default": false,
          "hidden": false
        },
        "custom_fields_file": {
          "type": "string",
          "default": "${projectDir}/assets/custom_meta_fields/example_custom_fields.json",
          "pattern": "^\\S+\\.json$",
          "hidden": false
        }
      }
    }
  },
  "required": [
    "meta_path",
    "ref_fasta_path",
    "ref_gff_path",
    "species"
  ]
}
